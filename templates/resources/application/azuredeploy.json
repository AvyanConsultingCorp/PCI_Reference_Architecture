{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentPrefix": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "resourceGroupPrefix": {
            "type": "string"
        },
        "environmentReference": {
            "type": "object"
        },
        "networkReference": {
            "type": "array"
        },
        "vmReference": {
            "type": "array"
        }
    },
    "variables": {
		"sqlDiskSize": 1000,
		"sqlWitnessDiskSize": 128,
		"sqlNamePrefix": "[concat(parameters('deploymentPrefix'),'-sql-')]",
		"sqlAvailabilitySetName": "[concat(variables('sqlNamePrefix'),'as')]",
		"sqlLBName": "[concat(variables('sqlNamePrefix'),'ilb')]",
		"lbFE1": "[concat(variables('sqlNamePrefix'),'ilbfe1')]",
		"lbBE": "[concat(variables('sqlNamePrefix'),'ilbbe')]",
		"sqlLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
		"sqlLBFEConfigID1": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE1'))]",
		"sqlLBBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",
		"sqlAOProbe1": "[concat(variables('sqlNamePrefix'),'ilbp1')]",
		"sqlLBProbeID1": "[concat(variables('sqllbID'),'/probes/',variables('sqlAOProbe1'))]",
		"deploySqlWitnessShare": "deploySqlWitnessShare",
		"deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
		"deploySqlWitnessShareTemplateUrl": "[concat(parameters('environmentReference').buildingBlocksEndpoint, 'application/nested_witness.json')]",
		"sqlWitnessSharePath": "[concat(parameters('deploymentPrefix'),'-fsw')]",
		"sqlWitnessVMName": "[concat(variables('sqlNamePrefix'),'w')]",
		"deploySqlAlwaysOnTemplateUrl": "[concat(parameters('environmentReference').buildingBlocksEndpoint, 'application/nested_alwayson.json')]",
		"sqlAOEPName": "[concat(parameters('deploymentPrefix'),'-agep')]",
		"sqlAOAGName1": "[concat(parameters('deploymentPrefix'),'-ag1')]",
		"sqlAOListener1": "[concat(parameters('deploymentPrefix'),'-agl1')]",
		"network": "[last(parameters('networkReference'))]",
        "subnetUri": "[resourceId(concat(parameters('resourceGroupPrefix'), '-', parameters('deploymentPrefix'), '-networking'), 'Microsoft.Network/virtualNetworks/Subnets', concat(parameters('deploymentPrefix'), '-', variables('network').name), last(variables('network').subnets).subnetName)]",
		"addressSpace": "[last(variables('network').subnets).addressSpacePrefix]",
        "substring": "[substring(variables('addressSpace'), 0, sub(length(variables('addressSpace')), 4))]",
        "staticIp": "[concat(variables('substring'), 10)]"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('sqlAvailabilitySetName')]",
			"apiVersion": "2016-04-30-preview",
			"location": "[resourceGroup().location]",
			"properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            }
		},
		{
			"apiVersion": "2015-06-15",
			"name": "[variables('sqlLBName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[resourceGroup().location]",
			"dependsOn": [],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE1')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[variables('staticIp')]",
							"subnet": {
								"id": "[variables('subnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('sqlAOListener1')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('sqlLBFEConfigID1')]"
							},
							"backendAddressPool": {
								"id": "[variables('sqlLBBEAddressPoolID')]"
							},
							"probe": {
								"id": "[variables('sqlLBProbeID1')]"
							},
							"protocol": "Tcp",
							"frontendPort": 1433,
							"backendPort": 1433,
							"enableFloatingIP": true
						}
					}
				],
				"probes": [
					{
						"name": "[variables('sqlAOProbe1')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59999,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "nicLoop",
				"count": 2
			},
			"dependsOn": [
				"[variables('sqlLBID')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('subnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('sqlLBBEAddressPoolID')]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('sqlWitnessVMName'), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('subnetUri')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2016-04-30-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('sqlNamePrefix'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": 2
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNamePrefix'), copyindex(), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS2_v2"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(variables('sqlNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('environmentReference').serviceAccess]",
					"adminPassword": "[parameters('environmentReference').serviceAccessPwD]"
				},
				"storageProfile": {
					"imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2014SP2-WS2012R2",
                        "sku": "Enterprise",
                        "version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-osdisk.vhd')]",
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-datadisk1.vhd')]",
							"caching": "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlDiskSize')]",
							"lun": 0
						},
						{
							"name": "[concat(variables('sqlNamePrefix'), copyindex(), '-logdisk1.vhd')]",
							"caching": "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlDiskSize')]",
							"lun": 1
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlNamePrefix'), copyindex(), '-nic'))]"
						}
					]
				}
			}
		},
		{
			"apiVersion": "2016-04-30-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('sqlWitnessVMName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName'), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS2_v2"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[variables('sqlWitnessVMName')]",
					"adminUsername": "[parameters('environmentReference').serviceAccess]",
					"adminPassword": "[parameters('environmentReference').serviceAccessPwD]"
				},
				"storageProfile": {
					"imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2014SP2-WS2012R2",
                        "sku": "Enterprise",
                        "version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('sqlWitnessVMName'), '-osdisk.vhd')]",
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"name": "[concat(variables('sqlWitnessVMName'), '-datadisk1.vhd')]",
							"caching": "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('sqlWitnessDiskSize')]",
							"lun": 0
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlWitnessVMName'), '-nic'))]"
						}
					]
				}
			}
		},
		{
			"name": "[variables('deploySqlWitnessShare')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',variables('sqlWitnessVMName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"sqlWitnessVMName": {
						"value": "[variables('sqlWitnessVMName')]"
					},
					"domainName": {
						"value": "[parameters('environmentReference').domainName]"
					},
					"sharePath": {
						"value": "[variables('sqlWitnessSharePath')]"
					},
					"adminUsername": {
						"value": "[parameters('environmentReference').serviceAccess]"
					},
					"adminPassword": {
						"value": "[parameters('environmentReference').serviceAccessPwD]"
					},
					"_artifactsLocation": {
						"value": "[parameters('environmentReference').buildingBlocksEndpoint]"
					},
					"_artifactsLocationSasToken": {
						"value": ""
					}
				}
			}
		},
		{
			"name": "deploySqlAlwaysOn",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',concat(variables('sqlNamePrefix'),'0'))]",
				"[resourceId('Microsoft.Compute/virtualMachines',concat(variables('sqlNamePrefix'),'1'))]",
				"[variables('deploySqlWitnessShareId')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('deploySqlAlwaysOnTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"sqlNamePrefix": {
						"value": "[variables('sqlNamePrefix')]"
					},
					"domainName": {
						"value": "[parameters('environmentReference').domainName]"
					},
					"namePrefix": {
						"value": "[parameters('deploymentPrefix')]"
					},
					"sharePath": {
						"value": "[variables('sqlWitnessSharePath')]"
					},
					"sqlWitnessVMName": {
						"value": "[variables('sqlWitnessVMName')]"
					},
					"sqlLBName": {
						"value": "[variables('sqlLBName')]"
					},
					"sqlLBIPAddress": {
						"value": "[variables('staticIp')]"
					},
					"dnsServerName": {
						"value": "[concat(parameters('deploymentPrefix'), '-PDC-VM')]"
					},
					"sqlServerServiceAccountUserName": {
						"value": "[concat(parameters('environmentReference').serviceAccess, '-sql')]"
					},
					"sqlServerServiceAccountPassword": {
						"value": "[parameters('environmentReference').serviceAccessPwD]"
					},
					"adminUsername": {
						"value": "[parameters('environmentReference').serviceAccess]"
					},
					"adminPassword": {
						"value": "[parameters('environmentReference').serviceAccessPwD]"
					},
					"_artifactsLocation": {
						"value": "[parameters('environmentReference').buildingBlocksEndpoint]"
					},
					"_artifactsLocationSasToken": {
						"value": ""
					},
					"sqlAlwaysOnEndpointName": {
						"value": "[variables('sqlAOEPName')]"
					},
					"sqlAlwaysOnAvailabilityGroupName1": {
						"value": "[variables('sqlAOAGName1')]"
					},
					"sqlAlwaysOnAvailabilityGroupListenerName1": {
						"value": "[variables('sqlAOListener1')]"
					}
				}
			}
        },
        {
			"condition": "[greater(length(parameters('vmReference')), 5)]",
            "name": "[concat(parameters('deploymentPrefix'), 'vmss-', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "copy": {
                "name": "vmssCopy",
                "count": 1
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('environmentReference').buildingBlocksEndpoint, 'application/nested_vmss.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bossObject": {
                        "value": "[parameters('vmReference')[copyIndex()]]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "deploymentPrefix": {
                        "value": "[parameters('deploymentPrefix')]"
                    },
                    "resourceGroupPrefix": {
                        "value": "[parameters('resourceGroupPrefix')]"
                    },
                    "networkReference": {
                        "value": "[parameters('networkReference')]"
                    }
                }
            }
        }
	]
}