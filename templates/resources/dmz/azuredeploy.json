{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "deploymentPrefix": {
            "defaultValue": "dev",
            "allowedValues": [
                "dev",
                "prod"
            ],
            "type": "string",
            "metadata": {
                "description": "Resources created will be prefixed with this."
            }
        },
        "BarracudaLicense": {
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "hourly"
            ],
            "type": "string",
            "metadata": {
                "description": "Type of license for use in Barracuda."
            }
        },
        "resourceGroupPrefix": {
            "type": "string",
            "metadata": {
                "description": "Deployment name"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D1"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "badmin"
        },
        "adminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "virtualMachineName01": "Barracuda-waf",
        "virtualMachineName02": "Barracuda-ngf",
        "loadBalancerName": "lb-waf",
        "bwafAvailSetName": "avset-waf",
        "subnetName": "dmzSubnet",
        "publicIpAddressName": "PIP-Barracuda-waf-byol",
        "networkSecurityGroupName": "dev-dmzSubnet-nsg",
        "networkInterfaceName02": "nic-barracuda-ngf",
        "networkInterfaceName01": "nic-barracuda-waf",
        "virtualNetworkName": "dev-dmz",
        "vnetID": "[resourceId(concat(parameters('resourceGroupPrefix'), '-', parameters('deploymentPrefix'), '-networking'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetName'))]",
        "nsgID": "[resourceId(concat(parameters('resourceGroupPrefix'), '-', parameters('deploymentPrefix'), '-networking'), 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "loadBalancerID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
        "lbProbeID": "[concat(variables('loadBalancerID'),'/probes/barracudaprobe')]",
        "frontEndIPConfigID": "[concat(variables('loadBalancerID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "lbPoolID": "[concat(variables('loadBalancerID'),'/backendAddressPools/loadBalancerBackEnd')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('bwafAvailSetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "comments": "This is the Availability Set for BWAF VM",
            "properties": {
                "platformFaultDomainCount": "2",
                "platformUpdateDomainCount": "5",
                "managed": "true"
            }
        },
        {
            "name": "[variables('virtualMachineName01')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName01'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('bwafAvailSetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName01')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "barracudanetworks",
                        "offer": "waf",
                        "sku": "[parameters('BarracudaLicense')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName01'))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('bwafAvailSetName'))]"
                }
            },
            "plan": {
                "name": "[parameters('BarracudaLicense')]",
                "publisher": "barracudanetworks",
                "product": "waf"
            }
        },
        {
            "name": "[variables('virtualMachineName02')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName02'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('bwafAvailSetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName02')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "barracudanetworks",
                        "offer": "barracuda-ng-firewall",
                        "sku": "[parameters('BarracudaLicense')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName02'))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('bwafAvailSetName'))]"
                }
            },
            "plan": {
                "name": "[parameters('BarracudaLicense')]",
                "publisher": "barracudanetworks",
                "product": "barracuda-ng-firewall"
            }
        },
        {
            "name": "[variables('networkInterfaceName01')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('loadBalancerID'),'/backendAddressPools/loadBalancerBackEnd')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            }
        },
        {
            "name": "[variables('networkInterfaceName02')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('loadBalancerID'),'/backendAddressPools/loadBalancerBackEnd')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('loadBalancerName')]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "comments": "This Load Balancer is used to access DMZ",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "Name": "loadBalancerBackEnd"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule8000",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 8000,
                            "backendPort": 8000,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "barracudaprobe",
                        "properties": {
                            "Protocol": "Http",
                            "Port": 8000,
                            "IntervalInSeconds": 5,
                            "NumberOfProbes": 2,
                            "RequestPath": "/"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}